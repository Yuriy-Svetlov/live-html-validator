'use strict';

const 
  htmlValidator = require("live-html-validator"),
  webServer = require('./web-server');

var 
  $htmlValidator;

  webServer();

module.exports = function(grunt) {

  grunt.initConfig({
    
    htmlValidator: {
      run: {
        options: {
          host: '127.0.0.1',
          port: '8080'
        },
      },
      check: {},
    },

    htmlmin: {  
      options: {
        collapseWhitespace: true,
        removeComments: true,
        removeScriptTypeAttributes: true, // Remove type="text/javascript" from script tags. Other type attribute values are left intact
        includeAutoGeneratedTags: false,
        ignoreCustomComments: [ // ignore noindex comments
            /^noindex/,
            /\/noindex+$/
        ], 
        minifyJS: false,
        minifyCSS: false,
        trimCustomFragments: true, // Удаляет пустой пространство около игнорируемых элементов
        //ignoreCustomFragments: [ (/\{\%[^\%]*?\%\}(\s)?/g) ], // Игнорирования тега
      },                                   
      dest: {                                      
        files: {                                   
          'dest/index.html': 'src/index.html'
        }
      }
    },

    watch: {
      options: {
        spawn: false 
        // It is recommended to disable `false` or not use 'grunt-contrib-watch' 
        // or perhaps even Grunt. Because it works very very slowly.
      },
      css: {
        files: ['src/index.html'],
        tasks: ['htmlmin:dest', 'htmlValidator:check']
      }        
    },

  });


  grunt.loadNpmTasks('grunt-contrib-watch');
  grunt.loadNpmTasks('grunt-contrib-htmlmin');


  // Register Task
  grunt.registerTask('start', ['htmlValidator:run', 'watch']);


  grunt.registerMultiTask('htmlValidator', '', function() {
    if(this.target === 'run'){
      $htmlValidator = new htmlValidator(this.data.options);
      $htmlValidator.run();
    }else{
      $htmlValidator.check();
    }
  });

}
